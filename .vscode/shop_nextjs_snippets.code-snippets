{
	// Place your shop_next workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"newNextClientComponent": {
		"prefix": "ncci",
		"body": [
			"\"use client\";",
			"",
			"import React, { JSX } from 'react';",
			"import clsx from 'clsx';",
			"",
			"interface $TM_FILENAME_BASE$Props {",
			"",
			"}",
			"",
			"export function $TM_FILENAME_BASE$1( {}: $TM_FILENAME_BASE$Props ): JSX.Element {",
  			"	return (",
    		"		<div className=''>",
			"			$2",
    		"		</div>",
  			"	);",
			"}"
		],
		"description": ""
	},
	"newNextServerComponent": {
		"prefix": "nsci",
		"body": [
			"import clsx from 'clsx';",
			"",
			"export function $TM_FILENAME_BASE$1( {}: $TM_FILENAME_BASE$Props ) {",
  			"	return (",
    		"		<div className=''>",
			"			$2",
    		"		</div>",
  			"	);",
			"}"
		],
		"description": ""
	},
	"React JSX Selector with clsx": {
		"prefix": "ns",
		"body": [
			"<div$1",
			"    className={clsx(",
			"        \"$2\"",
			"    )}",
			">",
			"$0",
			"</div$1>"
		],
		"description": "Create HTML element with className using clsx"
	},
	"clsx": {
		"prefix": "clsx",
		"body": [
			"className={clsx($1)}",
		],
		"description": ""
	}
}